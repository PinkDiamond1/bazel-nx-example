load("@npm_bazel_typescript//:index.bzl", "ts_library")
load("@build_bazel_rules_nodejs//:defs.bzl", "nodejs_binary")
load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")

package(default_visibility = ["//visibility:public"])

ts_library(
    name = "src",
    srcs = glob(
        include = ["*.ts"],
        exclude = ["*.spec.ts"],
    ),
    module_name = "@api",
    deps = [
        "//apps/api/src/app",
        "//apps/api/src/auth",
        "//apps/api/src/cats",
        "//apps/api/src/user",
        "@npm//@nestjs/common",
        "@npm//@nestjs/core",
        "@npm//@nestjs/platform-express",
        "@npm//@nestjs/swagger",
        "@npm//cors",
        "@npm//helmet",
    ],
)

RUNTIME_DEPS = [
    ":src",
    "@npm//passport-jwt",
    "@npm//pg",
    "@npm//swagger-ui-express",
]

nodejs_binary(
    name = "server",
    data = RUNTIME_DEPS + ["//:env_file"],
    entry_point = ":main.ts",
)

nodejs_image(
    name = "nodejs_image",
    data = RUNTIME_DEPS,
    entry_point = ":main.ts",
)

# Note it will not cross-compile on Mac OS to linux:
# https://github.com/bazelbuild/rules_nodejs/issues/396
# https://github.com/bazelbuild/rules_nodejs/pull/827
#
# bazel run //apps/api/src:latest
container_image(
    name = "latest",
    base = ":nodejs_image",
    repository = "nx_bazel_example",
    stamp = True,
    tags = ["local"],
)

# IMAGE_TAG=${CIRCLE_TAG:-${CIRCLE_BRANCH}-$(echo ${CIRCLE_SHA1} | cut -c -7)}
# bazel run --define push_tag=${IMAGE_TAG} --define push_repository=${REPOSITORY} //apps/api/src:push_container
container_push(
    name = "push_container",
    format = "Docker",
    image = ":nodejs_image",
    registry = "gcr.io",
    repository = "$(push_repository)",
    tag = "$(push_tag)",
)
